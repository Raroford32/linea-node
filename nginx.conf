worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 10240;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_buffer_size 256k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting for DDoS protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=rpc:10m rate=200r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Upstream servers for Besu nodes
    upstream besu_rpc_backend {
        least_conn;
        server linea-besu-primary:8545 weight=3 max_fails=3 fail_timeout=30s;
        server linea-besu-secondary:8545 weight=3 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream besu_ws_backend {
        least_conn;
        server linea-besu-primary:8546 weight=3 max_fails=3 fail_timeout=30s;
        server linea-besu-secondary:8546 weight=3 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Cache configuration
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=besu_cache:100m max_size=10g 
                     inactive=60m use_temp_path=off;

    # HTTP RPC Load Balancer
    server {
        listen 80;
        server_name _;

        # Connection and rate limits
        limit_conn perip 20;
        limit_conn perserver 1000;
        limit_req zone=rpc burst=50 nodelay;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Main RPC endpoint
        location / {
            # Cache GET requests for blockchain data
            proxy_cache besu_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 302 60s;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            
            # Add cache headers
            add_header X-Cache-Status $upstream_cache_status;
            
            # Proxy settings
            proxy_pass http://besu_rpc_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
    }

    # WebSocket Load Balancer
    server {
        listen 8080;
        server_name _;

        # Connection and rate limits
        limit_conn perip 50;
        limit_conn perserver 2000;
        limit_req zone=api burst=100 nodelay;

        # WebSocket proxy
        location / {
            proxy_pass http://besu_ws_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # Disable buffering for real-time data
            proxy_buffering off;
        }
    }

    # Metrics and monitoring endpoint
    server {
        listen 9090;
        server_name _;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location /metrics {
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            return 200 "# Nginx metrics available at /nginx_status\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream configuration for TCP load balancing (P2P connections)
stream {
    upstream besu_p2p_backend {
        least_conn;
        server linea-besu-primary:30303 weight=3 max_fails=3 fail_timeout=30s;
        server linea-besu-secondary:30303 weight=3 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 30303;
        proxy_pass besu_p2p_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 1s;
    }
}